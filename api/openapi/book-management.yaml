openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
    paths:
      /v1/signup:
        post:
          summary: Signup a new user
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
                    role:
                      type: string
          responses:
            '201':
              description: User created successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
      /v1/signin:
        post:
          summary: Signin a user
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
          responses:
            '200':
              description: User signed in successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        type: string
      /v1/author:
        post:
          summary: Create a new author
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
          responses:
            '200':
              description: Author created successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      author:
                        type: object
                        properties:
                          name:
                            type: string
        put:
          summary: Update an author
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          responses:
            '200':
              description: Author updated successfully
      /v1/author/{authorId}:
        delete:
          summary: Delete an author
          parameters:
            - in: path
              name: authorId
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Author deleted successfully
      /v1/authors:
        get:
          summary: List all authors
          responses:
            '200':
              description: A list of authors
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      authors:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
      /v1/book:
        post:
          summary: Create a new book
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    author_id:
                      type: string
                    category_id:
                      type: string
                    title:
                      type: string
                    stock:
                      type: integer
          responses:
            '200':
              description: Book created successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
        put:
          summary: Update a book
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    stock:
                      type: integer
          responses:
            '200':
              description: Book updated successfully
      /v1/book/{bookId}:
        delete:
          summary: Delete a book
          parameters:
            - in: path
              name: bookId
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Book deleted successfully
      /v1/book/borrow:
        post:
          summary: Borrow a book
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    book_id:
                      type: string
                    quantity:
                      type: integer
          responses:
            '200':
              description: Book borrowed successfully
      /v1/book/return:
        post:
          summary: Return a book
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    book_id:
                      type: string
                    quantity:
                      type: integer
          responses:
            '200':
              description: Book returned successfully
      /v1/books:
        get:
          summary: List all books
          responses:
            '200':
              description: A list of books
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      books:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            author:
                              type: string
                            category:
                              type: string
                            stock:
                              type: integer
      /v1/books/popular/{category}:
        get:
          summary: List popular books by category
          parameters:
            - in: path
              name: category
              required: true
              schema:
                type: string
          responses:
            '200':
              description: A list of popular books by category
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      books:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            author:
                              type: string
                            category:
                              type: string
                            stock:
                              type: integer
                            borrowed:
                              type: integer
                            is_popular:
                              type: boolean
      /v1/book/user/borrowed:
        get:
          summary: List user borrowed books
          responses:
            '200':
              description: A list of user borrowed books
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      books:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            author:
                              type: string
                            category:
                              type: string
                            stock:
                              type: integer
                            borrowed:
                              type: integer
      /v1/category:
        post:
          summary: Create a new category
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
          responses:
            '200':
              description: Category created successfully
        put:
          summary: Update a category
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          responses:
            '200':
              description: Category updated successfully
      /v1/category/{categoryId}:
        delete:
          summary: Delete a category
          parameters:
            - in: path
              name: categoryId
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Category deleted successfully
      /v1/categories:
        get:
          summary: List all categories
          responses:
            '200':
              description: A list of categories
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string